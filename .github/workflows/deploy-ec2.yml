name: Deploy to EC2

concurrency:
  group: ec2-deploy
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image TAG (default: latest)'
        required: false
        default: 'latest'   # 작은따옴표 사용

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 600 key.pem

      # 현재 EC2에 기록된 TAG 읽기(로그용)
      - name: Read previous TAG on EC2
        id: prev
        run: |
          echo "prev=$(ssh -i key.pem -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "grep -E '^TAG=' /home/ubuntu/studify-be/.env | cut -d= -f2 || echo latest")" >> $GITHUB_OUTPUT

      # 레포의 app/ 폴더를 EC2 ~/studify-be/ 로 동기화
      - name: Rsync app bundle
        run: |
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" \
            app/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/studify-be/

      # .env 주입 (시크릿 + TAG)
      - name: Inject .env on EC2
        env:
          TAG_VALUE: ${{ github.event.inputs.tag || secrets.TAG_DEFAULT || 'latest' }}
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "cd /home/ubuntu/studify-be && \
            touch .env && \
            # 기존 키 제거
            sed -i '/^DRIVER=/d;/^URL=/d;/^USER=/d;/^PASSWD=/d;/^EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=/d;/^TAG=/d;/^DOCKERHUB_USERNAME=/d' .env || true; \
            # 시크릿 반영
            [ -n '${{ secrets.DRIVER }}' ] && echo 'DRIVER=${{ secrets.DRIVER }}' >> .env || true; \
            echo 'URL=${{ secrets.URL }}' >> .env; \
            echo 'USER=${{ secrets.USER }}' >> .env; \
            echo 'PASSWD=${{ secrets.PASSWD }}' >> .env; \
            echo 'EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${{ secrets.EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE }}' >> .env; \
            [ -n '${{ secrets.DOCKERHUB_USERNAME }}' ] && echo 'DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}' >> .env || true; \
            # TAG 최종 주입
            echo 'TAG='\"$TAG_VALUE\" >> .env; \
            chmod +x deploy/*.sh"

      - name: Compose up (remote)
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "bash /home/ubuntu/studify-be/deploy/start.sh"

      - name: Smoketest (gateway)
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "curl -fsS http://localhost:8080/actuator/health | grep -q '\"status\":\"UP\"'"
